ET.aov <- with(mss_et_aov,
aov(trans ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(ET.aov)
ezANOVA(
mss_et_aov
, trans
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
mss_et_aov_p <- mss_et_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "trans", na.rm = TRUE)
mss_et_aov_p$trial_type <- factor(mss_et_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
ggplot(mss_et_aov_p, aes(x = factor(trial_type), y = mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Trial Type") +
ylab("Mean Switch Count")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
t.test(subset(mss_et_aov, trial_type=="inacc")$trans,
subset(mss_et_aov, trial_type=="similar_acc")$trans, paired = TRUE)
t.test(subset(mss_et_aov, trial_type=="inacc")$trans,
subset(mss_et_aov, trial_type=="dissimilar_acc")$trans, paired = TRUE)
t.test(subset(mss_et_aov, trial_type=="similar_acc")$trans,
subset(mss_et_aov, trial_type=="dissimilar_acc")$trans, paired = TRUE)
inacc_et <- psych::describe(subset(mss_et_aov, trial_type=="inacc")$trans)
sim_acc_et <- psych::describe(subset(mss_et_aov, trial_type=="similar_acc")$trans)
dissim_acc_et <- psych::describe(subset(mss_et_aov, trial_type=="dissimilar_acc")$trans)
cohensd_inacc_sim_acc_et <- abs((inacc_et$mean - sim_acc_et$mean)/((inacc_et$sd + sim_acc_et$sd)/2))
cohensd_inacc_sim_acc_et
cohensd_inacc_dissim_acc_et <- abs((inacc_et$mean - dissim_acc_et$mean)/((inacc_et$sd + dissim_acc_et$sd)/2))
cohensd_inacc_dissim_acc_et
cohensd_sim_acc_dissim_acc_et <- abs((sim_acc_et$mean - dissim_acc_et$mean)/((sim_acc_et$sd + dissim_acc_et$sd)/2))
cohensd_sim_acc_dissim_acc_et
top_bound <- mean(log(d_ts$RT)) + 3*sd(log(d_ts$RT))
bottom_bound <- mean(log(d_ts$RT)) - 3*sd(log(d_ts$RT))
d_filt_rt <- d_ts %>%
dplyr::filter(log(RT) < top_bound,
log(RT) > bottom_bound,
!is.na(acc),
familiarity != 0)
mss_ts_acc <-  d_filt_rt
mss_ts_acc$acc <- as.numeric(as.character(mss_ts_acc$acc))
mss_ts_acc <- mss_ts_acc %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc_ts <- mss_ts_acc$ID[mss_ts_acc$drop_acc == TRUE]
d_filt_rt <- d_filt_rt %>%
dplyr::filter(!ID %in% drop_acc_ts)
d_filt_rt_log <- d_filt_rt %>%
mutate(RT = log(RT))%>%
dplyr::filter(!ID %in% drop_acc_ts)
d_incl_rt <- d_ts %>%
dplyr::filter(!is.na(acc),
familiarity != 0)
mss_ts_acc_in <-  d_incl_rt
mss_ts_acc_in$acc <- as.numeric(as.character(mss_ts_acc_in$acc))
mss_ts_acc_in <- mss_ts_acc_in %>%
group_by(ID)%>%
summarise(acc = mean(acc))%>%
mutate(drop_acc = acc < .5)
drop_acc <- mss_ts_acc_in$ID[mss_ts_acc_in$drop_acc == TRUE]
d_incl_rt_log <- d_incl_rt %>%
mutate(RT = log(RT))
mss_ts_acc_t <-  d_filt_rt%>%
group_by(ID, similar)
mss_ts_acc_t$acc <- as.numeric(as.character(mss_ts_acc_t$acc))
mss_ts_acc_t <- mss_ts_acc_t %>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
mss_ts_acc_t_i <-  d_incl_rt%>%
group_by(ID, similar)
mss_ts_acc_t_i$acc <- as.numeric(as.character(mss_ts_acc_t_i$acc))
mss_ts_acc_t_i <- mss_ts_acc_t_i %>%
summarise(acc = mean(acc))%>%
spread(similar, acc)
t.test(mss_ts_acc_t$similar,
mss_ts_acc_t$dissimilar, paired = TRUE)
similar <- psych::describe(mss_ts_acc_t$similar)
dissimilar <- psych::describe(mss_ts_acc_t$dissimilar)
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
t.test(mss_ts_acc_t_i$similar,
mss_ts_acc_t_i$dissimilar, paired = TRUE)
similar <- psych::describe(mss_ts_acc_t_i$similar)
dissimilar <- psych::describe(mss_ts_acc_t_i$dissimilar)
cohensd_acc <- abs((similar$mean - dissimilar$mean)/((similar$sd + dissimilar$sd)/2))
cohensd_acc
ms <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)
ggplot(ms, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") + ggtitle("Touchscreen Accuracy") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
mss_ts_acc <-  d_filt_rt
mss_ts_acc$acc <- str_replace(mss_ts_acc$acc, "0", "inacc")
mss_ts_acc$acc <- str_replace(mss_ts_acc$acc, "1", "acc")
mss_ts_inacc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)%>%
select(-acc)
mss_ts_acc <-  mss_ts_acc%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)
mss_ts_sim <-  d_filt_rt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(RT = mean(RT))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, RT)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_ts_aov <- mss_ts_inacc %>%
left_join(mss_ts_sim)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "RT", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
mss_ts_acc_i <-  d_incl_rt
mss_ts_acc_i$acc <- str_replace(mss_ts_acc_i$acc, "0", "inacc")
mss_ts_acc_i$acc <- str_replace(mss_ts_acc_i$acc, "1", "acc")
mss_ts_inacc_i <-  mss_ts_acc_i%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)%>%
select(-acc)
mss_ts_acc_i <-  mss_ts_acc_i%>%
group_by(ID, acc)%>%
summarise(RT = mean(RT))%>%
spread(acc, RT)
mss_ts_sim_i <-  d_incl_rt %>%
dplyr::group_by(ID, acc, similar)%>%
dplyr::summarise(RT = mean(RT))%>%
dplyr::filter(acc == 1)%>%
tidyr::spread(similar, RT)%>%
dplyr::mutate(similar_acc = similar)%>%
dplyr::mutate(dissimilar_acc = dissimilar)
mss_ts_aov_i <- mss_ts_inacc_i %>%
left_join(mss_ts_sim_i)%>%
dplyr::filter(!is.na(similar_acc),
!is.na(dissimilar_acc),
!is.na(inacc))%>%
gather("trial_type", "RT", inacc:dissimilar_acc) %>%
filter(trial_type != "acc",
trial_type != "similar",
trial_type != "dissimilar")
TS.aov <- with(mss_ts_aov,
aov(RT ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(TS.aov)
ezANOVA(
mss_ts_aov
, RT
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
mss_ts_aov_p <- mss_ts_aov %>%
group_by(trial_type)%>%
multi_boot_standard(col = "RT", na.rm = TRUE)
mss_ts_aov_p$trial_type <- factor(mss_ts_aov_p$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
ggplot(mss_ts_aov_p, aes(x = factor(trial_type), y = mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Trial Type") +
ylab("Mean Reaction Time (ms)")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
TS.aov_i <- with(mss_ts_aov_i,
aov(RT ~ trial_type +
Error(ID /trial_type))) #add error term for ID for repeated measures
summary(TS.aov_i)
ezANOVA(
mss_ts_aov_i
, RT
, ID
, within = trial_type
, within_full = NULL
, within_covariates = NULL
, between = NULL
, between_covariates = NULL
, observed = NULL
, diff = NULL
, reverse_diff = FALSE
, type = 2
, white.adjust = FALSE
, detailed = FALSE
, return_aov = FALSE
)
mss_ts_aov_p_i <- mss_ts_aov_i %>%
group_by(trial_type)%>%
multi_boot_standard(col = "RT", na.rm = TRUE)
mss_ts_aov_p_i$trial_type <- factor(mss_ts_aov_p_i$trial_type,
levels = c("dissimilar_acc","similar_acc","inacc"))
ggplot(mss_ts_aov_p_i, aes(x = factor(trial_type), y = mean, fill = trial_type)) + geom_bar(stat = "identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Trial Type") +
ylab("Mean Reaction Time (ms)")  +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="similar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="inacc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov, trial_type=="similar_acc")$RT,
subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT, paired = TRUE)
inacc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="inacc")$RT)
sim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="similar_acc")$RT)
dissim_acc_ts <- psych::describe(subset(mss_ts_aov, trial_type=="dissimilar_acc")$RT)
cohensd_inacc_sim_acc_ts <- abs((inacc_ts$mean - sim_acc_ts$mean)/((inacc_ts$sd + sim_acc_ts$sd)/2))
cohensd_inacc_sim_acc_ts
cohensd_inacc_dissim_acc_ts <- abs((inacc_ts$mean - dissim_acc_ts$mean)/((inacc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_inacc_dissim_acc_ts
cohensd_sim_acc_dissim_acc_ts <- abs((sim_acc_ts$mean - dissim_acc_ts$mean)/((sim_acc_ts$sd + dissim_acc_ts$sd)/2))
cohensd_sim_acc_dissim_acc_ts
t.test(subset(mss_ts_aov_i, trial_type=="inacc")$RT,
subset(mss_ts_aov_i, trial_type=="similar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov_i, trial_type=="inacc")$RT,
subset(mss_ts_aov_i, trial_type=="dissimilar_acc")$RT, paired = TRUE)
t.test(subset(mss_ts_aov_i, trial_type=="similar_acc")$RT,
subset(mss_ts_aov_i, trial_type=="dissimilar_acc")$RT, paired = TRUE)
ms_et <- mss_et_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "ET")
ms_ts <- mss_ts_acc_t %>%
gather("similar", "acc", similar:dissimilar)%>%
group_by(similar)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(task = "TS")
ms_acc <- full_join(ms_et, ms_ts)
ggplot(ms_acc, aes(x = factor(similar), y = mean, fill = similar)) + geom_bar(stat = "identity") +
facet_grid(~ task) +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
xlab("Similarity") +
ylab("Proportion Accurate") + ggtitle("Accuracy") +
theme(panel.grid = element_blank()) + #no gridlines
scale_fill_grey() #grayscale
et <- spread(mss_et_aov, trial_type, trans)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(demo)
ts <- spread(mss_ts_aov, trial_type, RT)%>%
mutate(dacc_inacc = dissimilar_acc - inacc,
sacc_inacc = similar_acc - inacc,
dacc_sacc = dissimilar_acc - similar_acc)%>%
left_join(demo)
rcorr(et$age_months, et$dacc_inacc)
rcorr(et$age_months, et$sacc_inacc)
rcorr(et$age_months, et$dacc_sacc)
rcorr(ts$age_months, ts$dacc_inacc)
rcorr(ts$age_months, ts$sacc_inacc)
rcorr(ts$age_months, ts$dacc_sacc)
mss_et_acc_t$similar
similar <- psych::describe(mss_et_acc_t$similar)
similar
psych::describe(mss_et_acc_t$similar)
View(d)
setwd("~/Desktop/soc_ref_uncert/analysis")
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
library(lmerTest)
theme_set(theme_bw())
d.raw <- data.frame()
files <- dir("../data/coder_1")
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data/coder_2")
for (f in files) {
jf <- paste("../data/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
demo <- read.csv("../soc_ref_uncertainty_EH_demo2016.csv")
demo$age <- str_replace(demo$age, "n/a", "")
demo$age <- str_replace(demo$age, "N/A", "")
demo$english <- str_replace(demo$english, "n/a", "")
demo$english <- str_replace(demo$english, "N/A", "")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
demo$Condition <- str_replace(demo$Condition, " ", "")
trial_info <- read.csv("trial_info.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, gender, line, Condition, phase_onset, phase_offset, english) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
d <- filter(d, phase_length > 50) %>%
mutate(looks_sec = (num_looks/phase_length)*1000)
d_age <- d %>%
select(SID, age_years)%>%
unique
table(d_age$age_years)
#number of looks
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "num_looks")
#first half vs. second half
mslooks_half <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, first_half) %>%
multi_boot_standard(col = "num_looks")
msslooks_half <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, first_half) %>%
summarise(num_looks = mean(num_looks))
#looks per second
msslooks_sec <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(looks_sec = mean(looks_sec))
mslooks_sec <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "looks_sec")
#plot number of looks.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks based on half.
ggplot(msslooks_half, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks_half, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(first_half ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot looks per second.
ggplot(msslooks_sec, aes(x = phase_name, y = looks_sec,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks_sec, aes(y = mean)) +
geom_pointrange(data = mslooks_sec,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,.75)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
phase_lengths <- d %>%
group_by(phase_name) %>%
multi_boot_standard(col = "phase_length")
ggplot(phase_lengths, aes(x = phase_name, y = mean)) +
geom_bar(stat="identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9))+
xlab("Phase") +
ylab("Phase Length (ms)")
ggplot(mss_looks, aes(x = familiarity, y = mean)) +
geom_bar(stat="identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9))+
xlab("Phase") +
ylab("Phase Length (ms)")
#number of looks
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "num_looks")
#first half vs. second half
mslooks_half <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, first_half) %>%
multi_boot_standard(col = "num_looks")
msslooks_half <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, first_half) %>%
summarise(num_looks = mean(num_looks))
#looks per second
msslooks_sec <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(looks_sec = mean(looks_sec))
mslooks_sec <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "looks_sec")
#plot number of looks.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks based on half.
ggplot(msslooks_half, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks_half, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(first_half ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot looks per second.
ggplot(msslooks_sec, aes(x = phase_name, y = looks_sec,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks_sec, aes(y = mean)) +
geom_pointrange(data = mslooks_sec,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,.75)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
ggplot(mss_looks, aes(x = familiarity, y = mean)) +
geom_bar(stat="identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9))+
xlab("Phase") +
ylab("Phase Length (ms)")
ggplot(msslooks, aes(x = familiarity, y = mean)) +
geom_bar(stat="identity") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9))+
xlab("Phase") +
ylab("Phase Length (ms)")
msslooks <- filter(d, exclude == 0) %>%
group_by(SID,  num_objs, familiarity, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "num_looks")
ggplot(msslooks, aes(x = familiarity, y = num_looks)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
ggplot(msslooks, aes(x = num_objs, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1))
