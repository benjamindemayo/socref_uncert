theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
theme_set(theme_bw())
d.raw <- data.frame()
files <- dir("../data_e2/coder_1")
for (f in files) {
jf <- paste("../data_e2/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data_e2/coder_2")
for (f in files) {
jf <- paste("../data_e2/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
d.raw$SID <- str_replace(d.raw$SID, ".csv", "")
d.raw <- distinct(d.raw, SID, line)
demo <- read.csv("../demo_soc_ref_uncert_exp2.csv")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
demo$Condition <- str_replace(demo$Condition, " ", "")
trial_info <- read.csv("trial_info_e2.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, gender, line, Condition, Gaze, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
#get means for participants by condition for number of looks
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, trial_type, Gaze, age_years) %>%
summarise(num_looks = mean(num_looks))
#get means and CIs across participants for number of looks
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, trial_type, Gaze, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks$phase_name <- factor(msslooks$phase_name, levels = c("label-begin_slide","begin_slide-end_slide","end_slide-touch","touch-release"))
mslooks$phase_name <- factor(mslooks$phase_name, levels = c("label-begin_slide","begin_slide-end_slide","end_slide-touch","touch-release"))
#plot number of looks.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = trial_type, group = trial_type)) +
geom_jitter(width = .3, height = .05) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
ylim(c(0,3)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks NO INDIVIDUAL DATA PLOTTED.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = trial_type, group = trial_type)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
ylim(c(0,2.5)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
theme_set(theme_bw())
setwd("~/Desktop/soc_ref_uncert/analysis")
d.raw <- data.frame()
files <- dir("../data_e2/coder_1")
for (f in files) {
jf <- paste("../data_e2/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data_e2/coder_2")
for (f in files) {
jf <- paste("../data_e2/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
d.raw$SID <- str_replace(d.raw$SID, ".csv", "")
d.raw <- distinct(d.raw, SID, line)
demo <- read.csv("../demo_soc_ref_uncert_exp2.csv")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
demo$Condition <- str_replace(demo$Condition, " ", "")
trial_info <- read.csv("trial_info_e2.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, gender, line, Condition, Gaze, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
#get means for participants by condition for number of looks
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, trial_type, Gaze, age_years) %>%
summarise(num_looks = mean(num_looks))
#get means and CIs across participants for number of looks
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, trial_type, Gaze, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks$phase_name <- factor(msslooks$phase_name, levels = c("label-begin_slide","begin_slide-end_slide","end_slide-touch","touch-release"))
mslooks$phase_name <- factor(mslooks$phase_name, levels = c("label-begin_slide","begin_slide-end_slide","end_slide-touch","touch-release"))
#plot number of looks.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = trial_type, group = trial_type)) +
geom_jitter(width = .3, height = .05) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
ylim(c(0,3)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks NO INDIVIDUAL DATA PLOTTED.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = trial_type, group = trial_type)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
ylim(c(0,2.5)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
glm_maximal_mod <- glmer(social_ref ~ trial_type * Gaze +
(trial_type + Gaze | SID),
family = "binomial",
data = filter(d,
exclude == 0,
phase_name == "label-begin_slide"))
rt_maximal_mod <- lmer(num_looks ~ trial_type * Gaze * scale(age_months) +
(num_objs * familiarity | SID),
data = filter(d,
exclude == 0,
phase_name == "request_touch"))
rt_maximal_mod <- lmer(num_looks ~ trial_type * Gaze * scale(age_months) +
(trial_type * Gaze | SID),
data = filter(d,
exclude == 0,
phase_name == "request_touch"))
rt_maximal_mod <- lmer(num_looks ~ trial_type * Gaze * scale(age_months) +
(trial_type * Gaze | SID),
data = filter(d,
exclude == 0,
phase_name == "end_slide-touch"))
rt_maximal_mod <- lmer(num_looks ~ factor(trial_type) * factor(Gaze) * scale(age_months) +
(trial_type * Gaze | SID),
data = filter(d,
exclude == 0,
phase_name == "end_slide-touch"))
rt_maximal_mod <- lmer(num_looks ~ factor(trial_type) * factor(Gaze) * scale(age_months) +
(factor(trial_type) * factor(Gaze) | SID),
data = filter(d,
exclude == 0,
phase_name == "end_slide-touch"))
tr_maximal_mod <- lmer(num_looks ~ ~ trial_type * Gaze * scale(age_months) +
(trial_type * Gaze | SID),
data = filter(d,
exclude == 0,
phase_name == "touch-response"))
tr_maximal_mod <- lmer(num_looks ~ trial_type * Gaze * scale(age_months) +
(trial_type * Gaze | SID),
data = filter(d,
exclude == 0,
phase_name == "touch-response"))
tr_maximal_mod <- lmer(num_looks ~ trial_type * Gaze * scale(age_months) +
(trial_type * Gaze | SID),
data = filter(d,
exclude == 0,
phase_name == "touch-release"))
filter(d, exclude == 0, phase_name == "request_touch") %>%
group_by(age_years, num_objs, familiarity) %>%
summarise(num_looks = mean(num_looks))
filter(d, exclude == 0, phase_name == "request_touch") %>%
group_by(age_years, trial_type, Gaze) %>%
summarise(num_looks = mean(num_looks))
# takes a long time
omni_maximal_mod <- lmer(num_looks ~ factor(num_objs) * familiarity *
scale(age_months) * phase_name +
(num_objs + familiarity + phase_name | SID),
data = filter(dc, exclude == 0))
# takes a long time
omni_maximal_mod <- lmer(num_looks ~ factor(trial_type) * Gaze *
scale(age_months) * phase_name +
(trial_type + Gaze + phase_name | SID),
data = filter(d, exclude == 0))
glm_maximal_mod <- glmer(social_ref ~ trial_type * Gaze +
(trial_type + Gaze | SID),
family = "binomial",
data = filter(d,
exclude == 0,
phase_name == "label-begin_slide"))
msslengths <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, trial_type, Gaze, age_years) %>%
summarise(phase_length = mean(phase_length))
mslengths <- filter(d, exclude == 0) %>%
group_by(phase_name, trial_type, Gaze, age_years) %>%
multi_boot_standard(col = "phase_length")
msslengths$phase_name <- factor(msslenghts$phase_name, levels = c("label-begin_slide","begin_slide-end_slide","end_slide-touch","touch-release"))
mslengths$phase_name <- factor(mslengths$phase_name, levels = c("label-begin_slide","begin_slide-end_slide","end_slide-touch","touch-release"))
ggplot(msslengths, aes(x = phase_name, y = phase_length,
col = trial_type, group = trial_type)) +
geom_line(data = mslengths, aes(y = mean)) +
geom_pointrange(data = mslengths,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
ylim(c(0,12000)) +
xlab("Phase") +
ylab("Phase Length (ms)") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
rm(list=ls())
setwd("~/Desktop/soc_ref_uncert/analysis")
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
theme_set(theme_bw())
files <- dir("../data/coder_1/")
d.raw_c1 <- data.frame()
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c1 = jd$phase.onset,
phase_offset_c1 = jd$phase.offset,
num_looks_c1 = jd$reference.num_looks,
exclude_c1 = jd$reference.exclude)
d.raw_c1 <- bind_rows(d.raw_c1, id)
}
d.raw_c1$SID <- str_replace(d.raw_c1$SID, ".csv", "")
files <- dir("../data/coder_2_phase/")
d.raw_c2 <- data.frame()
for (f in files) {
jf <- paste("../data/coder_2_phase/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = jd$phase.ordinal +1,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset_c2 = jd$phase.onset,
phase_offset_c2 = jd$phase.offset)
d.raw_c2 <- bind_rows(d.raw_c2, id)
}
d.raw_c2$SID <- str_replace(d.raw_c2$SID, ".csv", "")
files <- dir("../data/coder_2_ref/")
d.raw_c2_ref <- data.frame()
for (f in files) {
jf <- paste("../data/coder_2_ref/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = jd$phase.ordinal + 1,
phase = as.numeric(jd$phase.1_2_3_4),
num_looks_c2_ref = jd$reference.num_looks)
d.raw_c2_ref <- bind_rows(d.raw_c2_ref, id)
}
d.raw_c2_ref$SID <- str_replace(d.raw_c2_ref$SID, ".csv", "")
rm(list=ls())
knitr::opts_chunk$set(fig.width=8, fig.height=5,
echo=TRUE, warning=FALSE, message=FALSE, cache=TRUE)
suppressPackageStartupMessages(c("dplyr","langcog","tidyr","ggplot2","lme4"))
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(xtable)
library(knitr)
library(markdown)
theme_set(theme_bw())
d.raw <- data.frame()
files <- dir("../data/coder_1")
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data/coder_2")
for (f in files) {
jf <- paste("../data/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = f,
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
d.raw$SID <- str_replace(d.raw$SID, ".csv", "")
d.raw <- distinct(d.raw, SID, line)
demo <- read.csv("../soc_ref_uncertainty_EH_demo2016.csv")
demo$age <- str_replace(demo$age, "n/a", "")
demo$age <- str_replace(demo$age, "N/A", "")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
demo$Condition <- str_replace(demo$Condition, " ", "")
trial_info <- read.csv("trial_info.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, gender, line, Condition, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
sr_phase <- d %>%
select(SID, trial, social_ref, phase_name) %>%
group_by(SID, trial) %>%
spread(phase_name, social_ref) %>%
mutate(request_touch = pmax(request_slide, slide_touch))%>%
gather("phase_name", "social_ref", label_request:request_touch)
nl_phase <- d %>%
select(SID, trial, num_looks, phase_name) %>%
group_by(SID, trial) %>%
spread(phase_name, num_looks) %>%
mutate(request_touch = request_slide + slide_touch)%>%
gather("phase_name", "num_looks", label_request:request_touch)
ex_phase <- d %>%
select(SID, trial, exclude, phase_name) %>%
group_by(SID, trial) %>%
spread(phase_name, exclude) %>%
mutate(request_touch = pmax(request_slide, slide_touch))%>%
gather("phase_name", "exclude", label_request:request_touch)
lgth_phase <- d %>%
select(SID, trial, phase_name, phase_length) %>%
group_by(SID, trial) %>%
spread(phase_name, phase_length) %>%
mutate(request_touch = pmax(request_slide, slide_touch))%>%
gather("phase_name", "phase_length", label_request:request_touch)
dc <- d %>%
select(SID, trial, social_ref, phase_name, phase_length, familiarity, num_objs, age_months, age_years) %>%
spread(phase_name, social_ref) %>%
mutate(request_touch = NA)%>%
group_by(SID, trial)%>%
select(SID, trial, familiarity, num_objs, age_months, age_years, label_request, request_touch, touch_response)%>%
gather("phase_name", "social_ref", label_request:touch_response)%>%
select(SID, trial, familiarity, num_objs, age_months, age_years, phase_name)%>%
left_join(sr_phase, by = c("SID", "trial", "phase_name"))%>%
left_join(nl_phase, by = c("SID", "trial", "phase_name"))%>%
left_join(ex_phase, by = c("SID", "trial", "phase_name"))%>%
left_join(lgth_phase, by = c("SID", "trial", "phase_name"))
#get means for participants by condition for social ref
mss <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(social_ref = mean(social_ref))
#get means and CIs across participants for social ref
ms <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "social_ref")
#get means for participants by condition for number of looks
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(num_looks = mean(num_looks))
#get means and CIs across participants for number of looks
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "num_looks")
#get means and CIs across conditions and participants for number of looks for first half vs. second half
mslooks_half <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, first_half) %>%
multi_boot_standard(col = "num_looks")
msslooks_half <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, first_half) %>%
summarise(num_looks = mean(num_looks))
#plot presence or absence of social referencing.
ggplot(mss, aes(x = phase_name, y = social_ref,
col = familiarity, group = familiarity)) +
geom_jitter(width = .3, height = .05) +
geom_line(data = ms, aes(y = mean)) +
geom_pointrange(data = ms,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,1)) +
xlab("") +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_jitter(width = .3, height = .05) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,3)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks NO INDIVIDUAL DATA PLOTTED.
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
#plot number of looks based on half.
ggplot(msslooks_half, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks_half, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(first_half ~ num_objs) +
ylim(c(0,2)) +
theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = .5))
source('~/.active-rstudio-document', echo=TRUE)
lm <- lmer(num_looks ~ num_objs * familiarity * phase_name * age_months +
(1|SID),
data = filter(dc, exclude == 0))
tab <- kable(coef(summary(lm)), caption = "Mixed effects linear regression model predicting social referencing")
print(tab, type="html")
coefs <- data.frame(coef(summary(lm)))
# use normal distribution to approximate p-value
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
lm <- lmer(num_looks ~ num_objs * familiarity * age_months +
(1|SID),
data = filter(dc, exclude == 0, phase_name == "touch_response"))
tab <- kable(coef(summary(lm)), caption = "Mixed effects linear regression model predicting social referencing")
print(tab, type="html")
tab
lm
tab <- kable(coef(summary(lm)), caption = "Mixed effects linear regression model predicting social referencing")
print(tab, type="html")
lm <- lmer(num_looks ~ num_objs * familiarity * age_months +
(1|SID),
data = filter(dc, exclude == 0, phase_name == "touch_response"))
lm
lm <- lmer(num_looks ~ num_objs * familiarity * age_months +
(1|SID),
REML=FALSE,
data = filter(dc, exclude == 0, phase_name == "touch_response"))
lm
lm <- lmer(num_looks ~ num_objs * familiarity * age_months +
(1|SID),
data = filter(dc, exclude == 0, phase_name == "touch_response"))
tab <- kable(coef(summary(lm)), caption = "Mixed effects linear regression model predicting social referencing")
print(tab, type="html")
