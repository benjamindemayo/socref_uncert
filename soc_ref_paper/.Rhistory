load("soc_ref_e1.RData")
#get means for plot
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks$phase_name <- factor(msslooks$phase_name, levels = c("label","slide", "planning", "response"))
mslooks$phase_name <- factor(mslooks$phase_name, levels = c("label","slide", "planning", "response"))
msslooks$num_objs <- factor(msslooks$num_objs,
levels = c(1,2),
labels = c("One object", "Two objects"))
mslooks$num_objs <- factor(mslooks$num_objs,
levels = c(1,2),
labels = c("One object", "Two objects"))
msslooks$familiarity <- factor(msslooks$familiarity,
levels = c("familiar", "novel"),
labels = c("familiar (F)", "novel (N)"))
mslooks$familiarity <- factor(mslooks$familiarity,
levels = c("familiar", "novel"),
labels = c("familiar (F)", "novel (N)"))
msslooks$age_years <- factor(msslooks$age_years,
levels = c(2, 3, 4, 5),
labels = c("2 years", "3 years", "4 years", "5 years"))
mslooks$age_years <- factor(mslooks$age_years,
levels = c(2, 3, 4, 5),
labels = c("2 years", "3 years", "4 years", "5 years"))
# Chunk 12: resultse1
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ num_objs) +
scale_y_continuous(limits=c(0,2), breaks=c(0,1,2)) +
theme(axis.text.x = element_text(angle = 0, hjust = .5, vjust = .5)) +
labs(x = "Phase", y = "Number of Looks") +
ggthemes::theme_few()
# Chunk 13
d$age_group[d$age_years == 2 | d$age_years == 3] <- "younger"
d$age_group[d$age_years == 4 | d$age_years == 5] <- "older"
lmer_data <- d %>%
filter(!exclude) %>%
mutate(num_objs = factor(num_objs),
familiarity = factor(familiarity),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
age_group = factor(age_group),
soc_ref = social_ref)
# Chunk 14: lmer_e1
l_lm <- lmer(num_looks ~ num_objs * familiarity * age_c +
(num_objs  | SID),
data = filter(lmer_data, phase_name == "label"))
label_lm <- summary(l_lm)
s_lm <- lmer(num_looks ~ num_objs * familiarity * age_c +
(num_objs  | SID),
data = filter(lmer_data, phase_name == "slide"))
slide_lm <- summary(s_lm)
p_lm <- lmer(num_looks ~ num_objs * familiarity * age_c +
(num_objs  | SID),
data = filter(lmer_data, phase_name == "planning"))
planning_lm <- summary(p_lm)
p_lm_group <- lmer(num_looks ~ num_objs * familiarity * age_group +
(num_objs  | SID),
data = filter(lmer_data, phase_name == "planning"))
planning_lm_age_group <- summary(p_lm_group)
r_lm <- lmer(num_looks ~ num_objs * familiarity * age_c +
(num_objs | SID),
data = filter(lmer_data, phase_name == "response"))
response_lm <- summary(r_lm)
# Chunk 15
#histogram for number of looks by phase.
hist <- d %>%
select(phase_name, num_looks)
hist$phase_name <- factor(hist$phase_name,
levels = c("label", "slide", "planning", "response"),
labels = c("Label", "Slide", "Planning", "Response"))
# Chunk 16: histe1
ggplot(hist, aes(num_looks, fill = num_looks)) +
geom_histogram(stat = "count") +
facet_grid(~phase_name) +
ggthemes::theme_few() +
labs(x = "Number of looks", y = "Count") +
scale_fill_discrete(name="Trial type")
# Chunk 17
glm_e1_l <- summary(glmer(soc_ref ~ num_objs * familiarity * age_c +
(1|SID),
data = filter(lmer_data, phase_name == "label"),
family = "binomial"))
glm_e1_l_tab <- as.data.frame(glm_e1_l$coef)
glm_e1_s <- summary(glmer(soc_ref ~ num_objs * familiarity * age_c +
(1|SID),
data = filter(lmer_data, phase_name == "slide"),
family = "binomial"))
glm_e1_s_tab <- as.data.frame(glm_e1_s$coef)
glm_e1_p <- summary(glmer(soc_ref ~ num_objs * familiarity * age_c +
(1|SID),
data = filter(lmer_data, phase_name == "planning"),
family = "binomial"))
glm_e1_p_tab <- as.data.frame(glm_e1_p$coef)
glm_e1_r <- summary(glmer(soc_ref ~ num_objs * familiarity + age_c +
(1|SID),
data = filter(lmer_data, phase_name == "response"),
family = "binomial"))
glm_e1_r_tab <- as.data.frame(glm_e1_r$coef)
#this last one does not converge with age interaction.
# Chunk 18
rm(list=ls())
load("soc_ref_e2.RData")
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(3, 4),
labels = c("three", "four"))
# Chunk 19
d$acc <- as.numeric(as.character(d$acc))
acc_mss_e2 <- d%>%
filter(!is.na(acc), exclude == 0)%>%
group_by(trial_type, Gaze, age_years)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(Exp = "2")
acc_mss_e2$Gaze <- factor(acc_mss_e2$Gaze,
levels = c("gaze","no_gaze"),
labels = c("Gaze", "No gaze"))
acc_mss_e2$trial_type <- factor(acc_mss_e2$trial_type,
levels = c("familiar","mutual", "novel"),
labels = c("FF", "FN", "NN"))
acc_mss_e2$age_years <- as.factor(acc_mss_e2$age_years)
# Chunk 20: acce2
ggplot(acc_mss_e2, aes(age_years, mean, fill=trial_type)) +
geom_bar(stat="identity", position = "dodge") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
facet_wrap(~ Gaze)  +
ggthemes::theme_few() +
labs(x = "Age in Years", y = "Accuracy") +
scale_fill_discrete(name="Trial type")
# Chunk 21
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
# Chunk 22
lmer_data$acc <- relevel(lmer_data$acc, ref = "0")
acclooks_mod <- summary(lmer(num_looks ~ acc * age_c * phase_name +
(1 | SID),
data = lmer_data))
# Chunk 23
#how often did children select two objects or no objects?
ids <- d %>%
distinct(SID)
trials <- d %>%
distinct(trial)
n <- length(ids$SID)*length(trials$trial)
n_two <- n #number of two-object trials
n_two_group <- n_two/2 #number of two-object trials per age group
res <- d %>%
distinct(SID, trial, response_orig, trial_type, acc, age_years)
#how often do kids pick 2 objects on 2-object trials?
nc <- length(res$acc[res$response_orig == "NC"])/n_two
b <- length(res$acc[res$response_orig == "B"])/n_two
lr <- length(res$acc[res$response_orig == "LR"])/n_two
rl <- length(res$acc[res$response_orig == "RL"])/n_two
tot <- 100*(lr + rl + b) #percent of trials with two objects placed in bucket
b3 <- length(res$acc[res$response_orig == "B" & res$age_years == 3])/n_two_group
b4 <- length(res$acc[res$response_orig == "B" & res$age_years == 4])/n_two_group
lr3 <- length(res$acc[res$response_orig == "LR" & res$age_years == 3])/n_two_group
lr4 <- length(res$acc[res$response_orig == "LR" & res$age_years == 4])/n_two_group
rl3 <- length(res$acc[res$response_orig == "RL" & res$age_years == 3])/n_two_group
rl4 <- length(res$acc[res$response_orig == "RL" & res$age_years == 4])/n_two_group
tot3 <- 100*(lr3 + rl3 + b3) #percent of 2obj trials with two objects placed in bucket
tot4 <- 100*(lr4 + rl4 + b4) #percent of 2obj trials with two objects placed in bucket
#are trials with 2 objects chosen more likely to be novel?
nov_t <- d %>%
distinct(SID, trial, response_orig, trial_type, acc, age_years, Gaze)%>%
mutate(both = response_orig == "LR" | response_orig == "RL" | response_orig == "B",
unambiguous = trial_type == "mutual" | trial_type == "familiar" | Gaze == "gaze")%>%
group_by(SID, age_years, trial_type)%>%
summarise(both = mean(both))
nov <- d %>%
distinct(SID, trial, response_orig, trial_type, acc, age_years, Gaze)%>%
mutate(both = response_orig == "LR" | response_orig == "RL" | response_orig == "B",
unambiguous = trial_type == "mutual" | trial_type == "familiar" | Gaze == "gaze")%>%
group_by(age_years, unambiguous)%>%
summarise(both = mean(both))
#not enough observations for t-test
#when kids put two objects in bucket, do they put the correct one in first if there is a correct answer?
cor <- d %>%
filter(!is.na(acc), response_orig != "B")%>%
distinct(SID, trial, response_orig, trial_type, acc, age_years)%>%
mutate(both = response_orig == "LR" | response_orig == "RL")
cor$acc <- as.numeric(cor$acc)
acc_sum <- cor%>%
filter(acc == 1)%>%
group_by(age_years)%>%
summarize(both = sum(both))
both_sum <- cor%>%
group_by(age_years)%>%
summarize(both = sum(both))
# Chunk 24
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
# Chunk 25
#get means for plot
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, trial_type, Gaze, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, trial_type, Gaze, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks$phase_name <- factor(msslooks$phase_name, levels = c("label","slide", "planning", "response"))
mslooks$phase_name <- factor(mslooks$phase_name, levels = c("label","slide", "planning", "response"))
msslooks$trial_type <- factor(msslooks$trial_type, labels = c("FF","FN", "NN"))
mslooks$trial_type <- factor(mslooks$trial_type, labels = c("FF","FN", "NN"))
msslooks$Gaze <- factor(msslooks$Gaze,
levels = c("gaze","no_gaze"),
labels = c("Referential gaze", "No referential gaze"))
mslooks$Gaze <- factor(mslooks$Gaze,
levels = c("gaze","no_gaze"),
labels = c("Referential gaze", "No referential gaze"))
msslooks$age_years <- factor(msslooks$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
mslooks$age_years <- factor(mslooks$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
msslooks <- msslooks %>%
mutate(familiarity = trial_type)
mslooks <- mslooks %>%
mutate(familiarity = trial_type)
# Chunk 26: resultse2
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper, shape = familiarity),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
scale_y_continuous(limits=c(0,2), breaks=c(0,1,2)) +
theme(axis.text.x = element_text(angle = 0, hjust = .5, vjust = .5))+
labs(x = "Phase", y = "Number of Looks")  +
ggthemes::theme_few()
# Chunk 27
#get means for accuracy plot
d$age_years <- as.factor(d$age_years)
msslooks_acc <- filter(d, exclude == 0, !is.na(acc)) %>%
group_by(SID, phase_name, acc, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks_acc <- filter(d, exclude == 0, !is.na(acc)) %>%
group_by(acc, phase_name, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks_acc$phase_name <- factor(msslooks_acc$phase_name, levels = c("label","slide", "planning", "response"))
mslooks_acc$phase_name <- factor(mslooks_acc$phase_name, levels = c("label","slide", "planning", "response"))
msslooks_acc$age_years <- factor(msslooks_acc$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
mslooks_acc$age_years <- factor(mslooks_acc$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
msslooks_acc$Accuracy <- as.factor(as.character(msslooks_acc$acc))
msslooks_acc$age_years <- as.factor(as.character(msslooks_acc$age_years))
mslooks_acc$Accuracy <- as.factor(as.character(mslooks_acc$acc))
mslooks_acc$age_years <- as.factor(as.character(mslooks_acc$age_years))
msslooks_acc$Accuracy <- factor(msslooks_acc$Accuracy,
levels = c(0, 1),
labels = c("incorrect", "correct"))
mslooks_acc$Accuracy <- factor(mslooks_acc$Accuracy,
levels = c(0, 1),
labels = c("incorrect", "correct"))
# Chunk 28: accresultse2
ggplot(msslooks_acc, aes(x = phase_name, y = num_looks,
col = Accuracy, group = Accuracy)) +
geom_line(data = mslooks_acc, aes(y = mean)) +
geom_pointrange(data = mslooks_acc,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(~age_years) +
scale_y_continuous(limits=c(0,2.5), breaks=c(0,1,2)) +
theme(axis.text.x = element_text(angle = 0, hjust = .5, vjust = .5))+
labs(x = "Phase", y = "Number of Looks") +
ggthemes::theme_few()
# Chunk 29
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
g_lm
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
lmer_data$phase_name <- relevel(lmer_data$trial_type, ref = "mutual")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "mutual")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
#get cohen's d
M1 =
M2 =
SD1 =
SD2 =
effect_size_d = (M1 - M2)/(sqrt((SD1*2 + SD2*2)/2))
g_lm
View(lmer_data)
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "mutual")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
g_lm
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "mutual")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
rm(list=ls())
load("soc_ref_e2.RData")
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(3, 4),
labels = c("three", "four"))
setwd("~/Desktop/soc_ref_uncert/soc_ref_paper")
library(papaja)
library(tidyverse)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(ggplot2)
library(rjson)
library(stringr)
library(lme4)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(broman)
library(kmr)
library(magrittr)
library(stargazer)
rm(list=ls())
load("soc_ref_e2.RData")
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(3, 4),
labels = c("three", "four"))
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
g_lm
lmer_data <- filter(lmer_data, gaze = "gaze")
lmer_data <- filter(lmer_data, gaze == "gaze")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * phase_name +
(trial_type | SID),
data = lmer_data))
g_lm
g_lm
es_data <- filter(lmer_data, gaze == "gaze")%>%
group_by(phase_name, trial_type)%>%
multi_boot_standard(col = num_looks)
es_data <- filter(lmer_data, gaze == "gaze")%>%
group_by(phase_name, trial_type)%>%
multi_boot_standard(col = "num_looks")
View(es_data)
es_data <- filter(lmer_data, gaze == "gaze")%>%
group_by(phase_name, trial_type)%>%
summarise(num_looks = mean(num_looks))
View(es_data)
es_data <- filter(lmer_data, gaze == "gaze")%>%
group_by(phase_name, trial_type)%>%
summarise(mean = mean(num_looks), sd = sd(num_looks))
View(es_data)
es_data$mean[es_data$phase_name=="response" & es_data$trial_type == "novel"]
M1 = es_data$mean[es_data$phase_name=="response" & es_data$trial_type == "novel"]
M2 = es_data$mean[es_data$phase_name=="response" & es_data$trial_type == "familiar"]
SD1 = es_data$sd[es_data$phase_name=="response" & es_data$trial_type == "novel"]
SD2 = es_data$sd[es_data$phase_name=="response" & es_data$trial_type == "familiar"]
effect_size_d = (M1 - M2)/(sqrt((SD1*2 + SD2*2)/2))
effect_size_d
install.packages('pwr')
library('pwr')
pwr.f2.test(u = 2, f2 = 0.3/(1 - 0.3), sig.level = 0.001, power = 0.8)
pwr.f2.test(u = 2, f2 = 0.3/(1 - 0.3), sig.level = 0.05, power = 0.8)
install.packages('MuMIn')
library('r.squaredGLMM(mF)')
library('MuMIn')
R2 <- r.squaredGLMM(g_lm)
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
glm <- lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data)
R2 <- r.squaredGLMM(glm)
R2
pwr.f2.test(u = 2, f2 = R2/(1 - R2), sig.level = 0.05, power = 0.8)
pwr.f2.test(u = 2, f2 = R2[1]/(1 - R2[1]), sig.level = 0.05, power = 0.8)
