mslooks_acc <- filter(d, exclude == 0, !is.na(acc)) %>%
group_by(acc, phase_name, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks_acc$phase_name <- factor(msslooks_acc$phase_name, levels = c("label","slide", "planning", "response"))
mslooks_acc$phase_name <- factor(mslooks_acc$phase_name, levels = c("label","slide", "planning", "response"))
msslooks_acc$age_years <- factor(msslooks_acc$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
mslooks_acc$age_years <- factor(mslooks_acc$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
msslooks_acc$Accuracy <- as.factor(as.character(msslooks_acc$acc))
msslooks_acc$age_years <- as.factor(as.character(msslooks_acc$age_years))
mslooks_acc$Accuracy <- as.factor(as.character(mslooks_acc$acc))
mslooks_acc$age_years <- as.factor(as.character(mslooks_acc$age_years))
msslooks_acc$Accuracy <- factor(msslooks_acc$Accuracy,
levels = c(0, 1),
labels = c("incorrect", "correct"))
mslooks_acc$Accuracy <- factor(mslooks_acc$Accuracy,
levels = c(0, 1),
labels = c("incorrect", "correct"))
ggplot(msslooks_acc, aes(x = phase_name, y = num_looks,
col = Accuracy, group = Accuracy)) +
geom_line(data = mslooks_acc, aes(y = mean)) +
geom_pointrange(data = mslooks_acc,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(~age_years) +
scale_y_continuous(limits=c(0,2.5), breaks=c(0,1,2)) +
theme(axis.text.x = element_text(angle = 0, hjust = .5, vjust = .5))+
labs(x = "Phase", y = "Number of Looks") +
ggthemes::theme_few() +
langcog::scale_colour_solarized()
rm(list=ls())
load("soc_ref_e1.RData")
#get means for plot
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, num_objs, familiarity, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, familiarity, num_objs, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks$phase_name <- factor(msslooks$phase_name, levels = c("label","slide", "planning", "response"))
mslooks$phase_name <- factor(mslooks$phase_name, levels = c("label","slide", "planning", "response"))
msslooks$num_objs <- factor(msslooks$num_objs,
levels = c(1,2),
labels = c("One object", "Two objects"))
mslooks$num_objs <- factor(mslooks$num_objs,
levels = c(1,2),
labels = c("One object", "Two objects"))
msslooks$familiarity <- factor(msslooks$familiarity,
levels = c("familiar", "novel"),
labels = c("familiar (F)", "novel (N)"))
mslooks$familiarity <- factor(mslooks$familiarity,
levels = c("familiar", "novel"),
labels = c("familiar (F)", "novel (N)"))
msslooks$age_years <- factor(msslooks$age_years,
levels = c(2, 3, 4, 5),
labels = c("2 years", "3 years", "4 years", "5 years"))
mslooks$age_years <- factor(mslooks$age_years,
levels = c(2, 3, 4, 5),
labels = c("2 years", "3 years", "4 years", "5 years"))
d$age_group[d$age_years == 2 | d$age_years == 3] <- "younger"
d$age_group[d$age_years == 4 | d$age_years == 5] <- "older"
lmer_data <- d %>%
filter(!exclude) %>%
mutate(num_objs = factor(num_objs),
familiarity = factor(familiarity),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
age_group = factor(age_group),
soc_ref = social_ref)
glm_e1_s <- summary(glmer(soc_ref ~ num_objs * familiarity * age_c +
(1|SID),
data = filter(lmer_data, phase_name == "slide"),
family = "binomial"))
glm_e1_s
\
\\
\«
«
setwd("~/Desktop/soc_ref_uncert/soc_ref_paper")
load("soc_ref_e1.RData")
View(d)
load("soc_ref_e1.RData")
View(d)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(tidyverse)
library(rjson)
library(lme4)
library(markdown)
library(lmerTest)
library(ggthemes)
d.raw <- data.frame()
files <- dir("../data/coder_1")
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(tidyverse)
library(rjson)
library(lme4)
library(markdown)
library(lmerTest)
library(ggthemes)
library(stringr)
d.raw <- data.frame()
files <- dir("../data/coder_1")
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data/coder_2")
for (f in files) {
jf <- paste("../data/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
demo <- read.csv("../soc_ref_uncertainty_EH_demo2016.csv")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
trial_info <- read.csv("../trial_info_e1.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, line, Condition, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
d <- filter(d, phase_length > 50) %>%
mutate(looks_sec = (num_looks/phase_length)*1000)
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(2, 3, 4, 5),
labels = c("two", "three", "four", "five"))
View(d)
View(d.raw)
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(tidyverse)
library(rjson)
library(lme4)
library(markdown)
library(lmerTest)
library(ggthemes)
library(stringr)
d.raw <- data.frame()
files <- dir("../data/coder_1")
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data/coder_2")
for (f in files) {
jf <- paste("../data/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
demo <- read.csv("../soc_ref_uncertainty_EH_demo2016.csv")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
trial_info <- read.csv("../trial_info_e1.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, line, Condition, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
d <- filter(d, phase_length > 50) %>%
mutate(looks_sec = (num_looks/phase_length)*1000)
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(2, 3, 4, 5),
labels = c("two", "three", "four", "five"))
accuracy <- read.csv("../data/accuracy_e1_2.csv")
acc <- accuracy %>%
gather("trial", "acc", X1:X12)
acc$trial <- as.numeric(str_replace(acc$trial, "X", ""))
#original responses
responses <- read.csv("../data/accuracy_e1.csv")
response <- responses %>%
gather("trial", "response", X1:X12)%>%
mutate(response_orig = response)%>%
select(SID, trial, response_orig)
response$trial <- as.numeric(str_replace(response$trial, "X", ""))
d<- d%>%
left_join(acc)%>%
left_join(response)
save(d, file = "soc_ref_e1.RData")
rm(list=ls())
d.raw <- data.frame()
files <- dir("../data_e2/coder_1")
for (f in files) {
jf <- paste("../data_e2/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
num_ques = as.numeric(jd$reference.num_ques),
num_sou = jd$reference.num_SOU,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)}
demo <- read.csv("../demo_soc_ref_uncert_exp2.csv")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
trial_info <- read.csv("../trial_info_e2.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, num_ques, num_sou, exclude, age_years, age_months, line, Condition, Gaze, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(3, 4),
labels = c("three", "four"))
accuracy <- read.csv("../data_e2/accuracy_e2_2.csv")
acc <- accuracy %>%
gather("trial", "acc", X1:X12)
acc$trial <- as.numeric(str_replace(acc$trial, "X", ""))
acc$acc <- as.factor(acc$acc)
#gaze acc
accuracy_gaze <- read.csv("../data_e2/accuracy_e2.csv")
accuracy_key <- read.csv("accuracy_key_gaze.csv")
acc_gaze <- accuracy_gaze %>%
gather("trial", "response", X1:X12)
acc_gaze$trial <- as.numeric(str_replace(acc_gaze$trial, "X", ""))
acc_gaze$response <- str_replace(acc_gaze$response, "LR", "L")
acc_gaze$response <- str_replace(acc_gaze$response, "RL", "R")
#combine with data file
acc_g <- acc_gaze %>%
left_join(accuracy_key)%>%
mutate(acc_gaze = response == gaze_answer)%>%
select(SID, trial, acc_gaze, response)
acc <- acc %>%
left_join(acc_g)
acc$trial <- as.numeric(acc$trial)
d<- d%>%
left_join(acc)
d$acc[d$trial_type == "novel" & d$Gaze == "gaze" & d$acc_gaze] <- 1
d$acc[d$trial_type == "novel" & d$Gaze == "gaze" & !d$acc_gaze] <- 0
d$acc[d$response == "NC" | d$response == "B"] <- NA
save(d, file = "soc_ref_e2.RData")
d.raw <- data.frame()
files <- dir("../data/coder_1")
for (f in files) {
jf <- paste("../data/coder_1/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = jd$phase.ordinal,
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = jd$phase.onset,
phase_offset = jd$phase.offset,
num_looks = jd$reference.num_looks,
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
files <- dir("../data/coder_2")
for (f in files) {
jf <- paste("../data/coder_2/",f,sep="")
jd <- read.csv(jf)
id <- data.frame(SID = str_replace(f, ".csv", ""),
line = as.numeric(jd$phase.ordinal),
phase = as.numeric(jd$phase.1_2_3_4),
phase_onset = as.numeric(jd$phase.onset),
phase_offset = as.numeric(jd$phase.offset),
num_looks = as.numeric(jd$reference.num_looks),
exclude = as.numeric(jd$reference.exclude))
d.raw <- bind_rows(d.raw, id)
}
demo <- read.csv("../soc_ref_uncertainty_EH_demo2016.csv")
demo$age <- as.numeric(demo$age)
demo$age_years <- trunc(demo$age, digits = 0)
demo$age_months <- demo$age*12
trial_info <- read.csv("../trial_info_e1.csv")
d <- left_join(d.raw, demo) %>%
select(SID, phase, num_looks, exclude, age_years, age_months, line, Condition, phase_onset, phase_offset) %>%
mutate(phase_length = phase_offset - phase_onset) %>%
mutate(social_ref = as.numeric(num_looks>0))%>%
left_join(trial_info, by = c("Condition","line"))%>%
mutate(first_half = between(trial, 1, 4))
d <- filter(d, phase_length > 50) %>%
mutate(looks_sec = (num_looks/phase_length)*1000)
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(2, 3, 4, 5),
labels = c("two", "three", "four", "five"))
load("soc_ref_e1.RData")
load("soc_ref_e1.RData")
View(d)
missing <- d%>%
filter(exclude)
missing <- d%>%
filter(exclude == 1)
View(missing)
trials_missing <- length(missing$SID)
ids_missing <- length(unique(missing$SID))
missings <- d %>%
group_by(age_years, num_obs)%>%
summarise(excluded = mean(exclude))
missings <- d %>%
group_by(age_years, num_objs)%>%
summarise(excluded = mean(exclude))
View(missings)
missings <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
View(missings)
missing_glm <- summary(glmer(exclude ~ num_objs * familiarity * age_years +
(1|SID),
data = filter(d),
family = "binomial"))
missing_glm <- summary(glmer(exclude ~ num_objs * familiarity * age_years +
(1|SID),
data = d,
family = "binomial"))
View(missing)
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
View(missing)
missingtwo <- missing$excluded[missing$age_years == 2]
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
missingfive <- missing$excluded[missing$age_years == 5]
missingtwo*100
broman::myround(missingtwo*100, 0)
broman::myround(missingtwo*100, 1)
rm(list=ls())
load("soc_ref_e2.RData")
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
View(missing)
View(d)
missingfour <- missing$excluded[missing$age_years == 4]
b2 <- length(d$acc[d$response_orig == "B" & d$age_years == 2])/n
load("soc_ref_e1.RData")
#how many trials are missing because of child off-task?
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingtwo <- missing$excluded[missing$age_years == 2]
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
missingfive <- missing$excluded[missing$age_years == 5]
ids <- d %>%
distinct(SID)
trials <- d %>%
distinct(trial)
n <- length(ids$SID)*length(trials$trial)
nc <- length(d$acc[d$response_orig == "NC"])/n
b <- length(d$acc[d$response_orig == "B"])/n
lr <- length(d$acc[d$response_orig == "LR"])/n
rl <- length(d$acc[d$response_orig == "RL"])/n
tot <- 100*(lr + rl) #percent of trials with two objects placed in bucket
b2 <- length(d$acc[d$response_orig == "B" & d$age_years == 2])/n
load("soc_ref_e1.RData")
#how many trials are missing because of child off-task?
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingtwo <- missing$excluded[missing$age_years == 2]
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
missingfive <- missing$excluded[missing$age_years == 5]
setwd("~/Desktop/soc_ref_uncert/soc_ref_paper")
load("soc_ref_e1.RData")
#how many trials are missing because of child off-task?
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingtwo <- missing$excluded[missing$age_years == 2]
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
missingfive <- missing$excluded[missing$age_years == 5]
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(broman)
library(kmr)
library(magrittr)
load("soc_ref_e1.RData")
#how many trials are missing because of child off-task?
missing <- d %>%
group_by(age_years)%>%
summarise(excluded = mean(exclude))
missingtwo <- missing$excluded[missing$age_years == 2]
missingthree <- missing$excluded[missing$age_years == 3]
missingfour <- missing$excluded[missing$age_years == 4]
missingfive <- missing$excluded[missing$age_years == 5]
ids <- d %>%
distinct(SID)
trials <- d %>%
distinct(trial)
n <- length(ids$SID)*length(trials$trial)
View(trials)
View(ids)
n_trials <- length(d$SID)/4
View(d)
load("soc_ref_e1.RData")
View(ids)
ids <- d %>%
unique(SID)
ids <- d %>%
unique(SID)
View(d)
b2 <- length(d$acc[d$response_orig == "B" & d$age_years == 2])/240
b3 <- length(d$acc[d$response_orig == "B" & d$age_years == 3])/240
b4 <- length(d$acc[d$response_orig == "B" & d$age_years == 4])/240
b5 <- length(d$acc[d$response_orig == "B" & d$age_years == 5])/240
b <- length(d$acc[d$response_orig == "B"])/n
n <- length(ids$SID)*length(trials$trial)
nc <- length(d$acc[d$response_orig == "NC"])/n
b <- length(d$acc[d$response_orig == "B"])/n
lr <- length(d$acc[d$response_orig == "LR"])/n
rl <- length(d$acc[d$response_orig == "RL"])/n
tot <- 100*(lr + rl + b) #percent of trials with two objects placed in bucket
lr2 <- length(d$acc[d$response_orig == "LR" & d$age_years == 2])/240
lr3 <- length(d$acc[d$response_orig == "LR" & d$age_years == 3])/240
lr4 <- length(d$acc[d$response_orig == "LR" & d$age_years == 4])/240
lr5 <- length(d$acc[d$response_orig == "LR" & d$age_years == 5])/240
rl2 <- length(d$acc[d$response_orig == "RL" & d$age_years == 2])/240
rl3 <- length(d$acc[d$response_orig == "RL" & d$age_years == 3])/240
rl4 <- length(d$acc[d$response_orig == "RL" & d$age_years == 4])/240
rl5 <- length(d$acc[d$response_orig == "RL" & d$age_years == 5])/240
tot2 <- 100*(lr2 + rl2 + b2) #percent of trials with two objects placed in bucket
tot3 <- 100*(lr3 + rl3 + b3) #percent of trials with two objects placed in bucket
tot4 <- 100*(lr4 + rl4 + b4) #percent of trials with two objects placed in bucket
tot5 <- 100*(lr5 + rl5 + b5) #percent of trials with two objects placed in bucket
