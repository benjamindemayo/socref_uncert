"Num objects (2)",
"Familiarity (N)",
"Age",
"Num objects (2) * Familiarity (N)",
"Num objects (2) * Age",
"Familiarity (N) * Age",
"Num objects (2) * Familiarity (N) * Age")
rownames(e1_l.tab) <- NULL
e1_l.tab <- e1_l.tab[,c(6,1:2,4:5)]
names(e1_l.tab)[4:5] <- c("$t$ value","$p$ value")
e1_l.tab %<>%
mutate(
stars = ifelse(`$p$ value` > .1, "",
ifelse(`$p$ value` < .001, "***",
ifelse(`$p$ value` < .01, "**",
ifelse(`$p$ value` < .05, "*",
ifelse(`$p$ value` < .1, ".", "Error"))))),
`$p$ value` = ifelse(`$p$ value` > .1, round(`$p$ value`, 2),
ifelse(`$p$ value` < .001, "$<$ .001",
ifelse(`$p$ value` < .01, round(`$p$ value`, 2),
ifelse(`$p$ value` < .05, round(`$p$ value`, 2),
ifelse(`$p$ value` < .1, round(`$p$ value`, 2),
"Error")))))
)
names(e1_l.tab)[6] <- c("")
print(xtable(e1_l.tab,
align = c("l","l","r","r","r","r", "l"),
label = "tab:exp1_l_reg",
caption = "Predictor estimates with standard errors and significance information for a linear mixed-effects model predicting social referencing in the label phase in Experiment 1."),
include.rownames=FALSE,hline.after=c(0,nrow(e1_l.tab)),
sanitize.text.function=function(x){x},
caption.placement = 'bottom',
table.placement = "tb",
comment = F)
# Chunk 19: e1_table_s
e1_s.tab <- as.data.frame(slide_lm$coef)
e1_s.tab$Predictor <- c("Intercept",
"Num objects (2)",
"Familiarity (N)",
"Age",
"Num objects (2) * Familiarity (N)",
"Num objects (2) * Age",
"Familiarity (N) * Age",
"Num objects (2) * Familiarity (N) * Age")
rownames(e1_s.tab) <- NULL
e1_s.tab <- e1_s.tab[,c(6,1:2,4:5)]
names(e1_s.tab)[4:5] <- c("$t$ value","$p$ value")
e1_s.tab %<>%
mutate(
stars = ifelse(`$p$ value` > .1, "",
ifelse(`$p$ value` < .001, "***",
ifelse(`$p$ value` < .01, "**",
ifelse(`$p$ value` < .05, "*",
ifelse(`$p$ value` < .1, ".", "Error"))))),
`$p$ value` = ifelse(`$p$ value` > .1, round(`$p$ value`, 2),
ifelse(`$p$ value` < .001, "$<$ .001",
ifelse(`$p$ value` < .01, round(`$p$ value`, 2),
ifelse(`$p$ value` < .05, round(`$p$ value`, 2),
ifelse(`$p$ value` < .1, round(`$p$ value`, 2),
"Error")))))
)
names(e1_s.tab)[6] <- c("")
print(xtable(e1_s.tab,
align = c("l","l","r","r","r","r", "l"),
label = "tab:exp1_s_reg",
caption = "Predictor estimates with standard errors and significance information for a linear mixed-effects model predicting social referencing in the slide phase in Experiment 1."),
include.rownames=FALSE,hline.after=c(0,nrow(e1_s.tab)),
sanitize.text.function=function(x){x},
caption.placement = 'bottom',
table.placement = "tb",
comment = F)
# Chunk 20: e1_table_p
e1_p.tab <- as.data.frame(planning_lm$coef)
e1_p.tab$Predictor <- c("Intercept",
"Num objects (2)",
"Familiarity (N)",
"Age",
"Num objects (2) * Familiarity (N)",
"Num objects (2) * Age",
"Familiarity (N) * Age",
"Num objects (2) * Familiarity (N) * Age")
rownames(e1_p.tab) <- NULL
e1_p.tab <- e1_p.tab[,c(6,1:2,4:5)]
names(e1_p.tab)[4:5] <- c("$t$ value","$p$ value")
e1_p.tab %<>%
mutate(
stars = ifelse(`$p$ value` > .1, "",
ifelse(`$p$ value` < .001, "***",
ifelse(`$p$ value` < .01, "**",
ifelse(`$p$ value` < .05, "*",
ifelse(`$p$ value` < .1, ".", "Error"))))),
`$p$ value` = ifelse(`$p$ value` > .1, round(`$p$ value`, 2),
ifelse(`$p$ value` < .001, "$<$ .001",
ifelse(`$p$ value` < .01, round(`$p$ value`, 2),
ifelse(`$p$ value` < .05, round(`$p$ value`, 2),
ifelse(`$p$ value` < .1, round(`$p$ value`, 2),
"Error")))))
)
names(e1_p.tab)[6] <- c("")
print(xtable(e1_p.tab,
align = c("l","l","r","r","r","r", "l"),
label = "tab:exp1_p_reg",
caption = "Predictor estimates with standard errors and significance information for a linear mixed-effects model predicting social referencing in the planning phase in Experiment 1."),
include.rownames=FALSE,hline.after=c(0,nrow(e1_p.tab)),
sanitize.text.function=function(x){x},
caption.placement = 'bottom',
table.placement = "tb",
comment = F)
# Chunk 21: e1_table_r
e1_r.tab <- as.data.frame(response_lm$coef)
e1_r.tab$Predictor <- c("Intercept",
"Num objects (2)",
"Familiarity (N)",
"Age",
"Num objects (2) * Familiarity (N)",
"Num objects (2) * Age",
"Familiarity (N) * Age",
"Num objects (2) * Familiarity (N) * Age")
rownames(e1_r.tab) <- NULL
e1_r.tab <- e1_r.tab[,c(6,1:2,4:5)]
names(e1_r.tab)[4:5] <- c("$t$ value","$p$ value")
e1_r.tab %<>%
mutate(
stars = ifelse(`$p$ value` > .1, "",
ifelse(`$p$ value` < .001, "***",
ifelse(`$p$ value` < .01, "**",
ifelse(`$p$ value` < .05, "*",
ifelse(`$p$ value` < .1, ".", "Error"))))),
`$p$ value` = ifelse(`$p$ value` > .1, round(`$p$ value`, 2),
ifelse(`$p$ value` < .001, "$<$ .001",
ifelse(`$p$ value` < .01, round(`$p$ value`, 2),
ifelse(`$p$ value` < .05, round(`$p$ value`, 2),
ifelse(`$p$ value` < .1, round(`$p$ value`, 2),
"Error")))))
)
names(e1_r.tab)[6] <- c("")
print(xtable(e1_r.tab,
align = c("l","l","r","r","r","r", "l"),
label = "tab:exp1_r_reg",
caption = "Predictor estimates with standard errors and significance information for a linear mixed-effects model predicting social referencing in the response phase in Experiment 1."),
include.rownames=FALSE,hline.after=c(0,nrow(e1_r.tab)),
sanitize.text.function=function(x){x},
caption.placement = 'bottom',
table.placement = "tb",
comment = F)
# Chunk 22
rm(list=ls())
load("soc_ref_e2.RData")
age_months <- d %>%
group_by(age_years) %>%
multi_boot_standard(col = "age_months")
age_months$age_years <- factor(age_months$age_years,
levels = c(3, 4),
labels = c("three", "four"))
# Chunk 23
d$acc <- as.numeric(as.character(d$acc))
acc_mss_e2 <- d%>%
filter(!is.na(acc), exclude == 0)%>%
group_by(trial_type, Gaze, age_years)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(Exp = "2")
acc_mss_e2$Gaze <- factor(acc_mss_e2$Gaze,
levels = c("gaze","no_gaze"),
labels = c("gaze", "no gaze"))
acc_mss_e2$trial_type <- factor(acc_mss_e2$trial_type,
levels = c("familiar","mutual", "novel"),
labels = c("FF", "FN", "NN"))
acc_mss_e2$age_years <- as.factor(acc_mss_e2$age_years)
# Chunk 24
ggplot(acc_mss_e2, aes(age_years, mean, fill=trial_type)) +
geom_bar(stat="identity", position = "dodge") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
facet_wrap(~ Gaze)  +
ggthemes::theme_few() +
langcog::scale_colour_solarized()
# Chunk 25
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
acc_mod <- summary(glmer(acc ~ trial_type * gaze + age_c  +
(1| SID),
data = lmer_data,
family = "binomial"))
# Chunk 26
lmer_data$phase_name <- relevel(lmer_data$phase_name, ref = "slide")
g_lm <- summary(lmer(num_looks ~ trial_type *  age_c * gaze * phase_name +
(trial_type | SID),
data = lmer_data))
# Chunk 28
#get means for plot
msslooks <- filter(d, exclude == 0) %>%
group_by(SID, phase_name, trial_type, Gaze, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks <- filter(d, exclude == 0) %>%
group_by(phase_name, trial_type, Gaze, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks$phase_name <- factor(msslooks$phase_name, levels = c("label","slide", "planning", "response"))
mslooks$phase_name <- factor(mslooks$phase_name, levels = c("label","slide", "planning", "response"))
msslooks$trial_type <- factor(msslooks$trial_type, labels = c("FF","FN", "NN"))
mslooks$trial_type <- factor(mslooks$trial_type, labels = c("FF","FN", "NN"))
msslooks$Gaze <- factor(msslooks$Gaze,
levels = c("gaze","no_gaze"),
labels = c("Referential gaze", "No referential gaze"))
mslooks$Gaze <- factor(mslooks$Gaze,
levels = c("gaze","no_gaze"),
labels = c("Referential gaze", "No referential gaze"))
msslooks$age_years <- factor(msslooks$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
mslooks$age_years <- factor(mslooks$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
msslooks <- msslooks %>%
mutate(familiarity = trial_type)
mslooks <- mslooks %>%
mutate(familiarity = trial_type)
# Chunk 29: results_e2
ggplot(msslooks, aes(x = phase_name, y = num_looks,
col = familiarity, group = familiarity)) +
geom_line(data = mslooks, aes(y = mean)) +
geom_pointrange(data = mslooks,
aes(y = mean, ymin = ci_lower, ymax = ci_upper, shape = familiarity),
position = position_dodge(width =.1)) +
facet_grid(age_years ~ Gaze) +
scale_y_continuous(limits=c(0,2), breaks=c(0,1,2)) +
theme(axis.text.x = element_text(angle = 0, hjust = .5, vjust = .5))+
labs(x = "Phase", y = "Number of Looks")  +
ggthemes::theme_few() +
langcog::scale_colour_solarized()
# Chunk 32: e2_table
e2.tab <- as.data.frame(g_lm$coef)
e2.tab$Predictor <- c("Intercept",
"Trial type(FN)",
"Trial type(NN)",
"Age",
"Gaze(Y)",
"Phase(Label)",
"Phase(Planning)",
"Phase(Response)",
"Trial type(FN) * Age",
"Trial type(NN) * Age",
"Trial type(FN) * Gaze",
"Trial type(NN) * Gaze",
"Age * Gaze",
"Trial type(FN) * Phase(Label)",
"Trial type(NN) * Phase(Label)",
"Trial type(FN) * Phase(Planning)",
"Trial type(NN) * Phase(Planning)",
"Trial type(FN) * Phase(Response)",
"Trial type(NN) * Phase(Response)",
"Age * Phase(Label)",
"Age * Phase(Planning)",
"Age * Phase(Response)",
"Gaze * Phase(Label)",
"Gaze * Phase(Planning)",
"Gaze * Phase(Response)",
"Trial type(FN) * Age * Gaze",
"Trial type(NN) * Age * Gaze",
"Trial type(FN) * Age * Phase(Label)",
"Trial type(NN) * Age * Phase(Label)",
"Trial type(FN) * Age * Phase(Planning)",
"Trial type(NN) * Age * Phase(Planning)",
"Trial type(FN) * Age * Phase(Response)",
"Trial type(NN) * Age * Phase(Response)",
"Trial type(FN) * Gaze * Phase(Label)",
"Trial type(NN) * Gaze * Phase(Label)",
"Trial type(FN) * Gaze * Phase(Planning)",
"Trial type(NN) * Gaze * Phase(Planning)",
"Trial type(FN) * Gaze * Phase(Response)",
"Trial type(NN) * Gaze * Phase(Response)",
"Age * Gaze * Phase(Label)",
"Age * Gaze * Phase(Planning)",
"Age * Gaze * Phase(Response)",
"Trial type(FN) * Age * Gaze * Phase(Label)",
"Trial type(NN) * Age * Gaze * Phase(Label)",
"Trial type(FN) * Age * Gaze * Phase(Planning)",
"Trial type(NN) * Age * Gaze * Phase(Planning)",
"Trial type(FN) * Age * Gaze * Phase(Response)",
"Trial type(NN) * Age * Gaze * Phase(Response)")
rownames(e2.tab) <- NULL
e2.tab <- e2.tab[,c(6,1:2,4:5)]
names(e2.tab)[4:5] <- c("$t$ value","$p$ value")
e2.tab %<>%
mutate(
stars = ifelse(`$p$ value` > .1, "",
ifelse(`$p$ value` < .001, "***",
ifelse(`$p$ value` < .01, "**",
ifelse(`$p$ value` < .05, "*",
ifelse(`$p$ value` < .1, ".", "Error"))))),
`$p$ value` = ifelse(`$p$ value` > .1, round(`$p$ value`, 2),
ifelse(`$p$ value` < .001, "$<$ .001",
ifelse(`$p$ value` < .01, round(`$p$ value`, 2),
ifelse(`$p$ value` < .05, round(`$p$ value`, 2),
ifelse(`$p$ value` < .1, round(`$p$ value`, 2),
"Error")))))
)
names(e2.tab)[6] <- c("")
print(xtable(e2.tab,
align = c("l","l","r","r","r","r","l"),
label = "tab:exp2_reg",
caption = "Predictor estimates with standard errors and significance information for a linear mixed-effects model predicting social referencing in Experiment 1."),
include.rownames=FALSE,hline.after=c(0,nrow(e2.tab)),
sanitize.text.function=function(x){x},
caption.placement = 'bottom',
table.placement = "tb",
comment = F)
# Chunk 33
lmer_data$acc <- relevel(lmer_data$acc, ref = "0")
acclooks_mod <- summary(lmer(num_looks ~ acc * age_c * phase_name +
(1 | SID),
data = lmer_data))
# Chunk 34: e2_acc_table
e2acc.tab <- as.data.frame(acclooks_mod$coef)
e2acc.tab$Predictor <- c("Intercept",
"Acc(Y)",
"Age",
"Phase(Label)",
"Phase(Planning)",
"Phase(Response)",
"Acc(Y) * Age",
"Acc(Y) * Phase(Label)",
"Acc(Y) * Phase(Planning)",
"Acc(Y) * Phase(Response)",
"Age * Phase(Label)",
"Age * Phase(Planning)",
"Age * Phase(Response)",
"Acc(Y) * Age * Phase(Label)",
"Acc(Y) * Age * Phase(Planning)",
"Acc(Y) * Age * Phase(Response)")
rownames(e2acc.tab) <- NULL
e2acc.tab <- e2acc.tab[,c(6,1:2,4:5)]
names(e2acc.tab)[4:5] <- c("$t$ value","$p$ value")
e2acc.tab %<>%
mutate(
stars = ifelse(`$p$ value` > .1, "",
ifelse(`$p$ value` < .001, "***",
ifelse(`$p$ value` < .01, "**",
ifelse(`$p$ value` < .05, "*",
ifelse(`$p$ value` < .1, ".", "Error"))))),
`$p$ value` = ifelse(`$p$ value` > .1, round(`$p$ value`, 2),
ifelse(`$p$ value` < .001, "$<$ .001",
ifelse(`$p$ value` < .01, round(`$p$ value`, 2),
ifelse(`$p$ value` < .05, round(`$p$ value`, 2),
ifelse(`$p$ value` < .1, round(`$p$ value`, 2),
"Error")))))
)
names(e2acc.tab)[6] <- c("")
print(xtable(e2acc.tab,
align = c("l","l","r","r","r","r", "l"),
label = "tab:exp2acc_reg",
caption = "Predictor estimates with standard errors and significance information for a linear mixed-effects model predicting social referencing based on accuracy in Experiment 2."),
include.rownames=FALSE,hline.after=c(0,nrow(e2acc.tab)),
sanitize.text.function=function(x){x},
caption.placement = 'bottom',
table.placement = "tb",
comment = F)
# Chunk 35
#get means for accuracy plot
d$age_years <- as.factor(d$age_years)
msslooks_acc <- filter(d, exclude == 0, !is.na(acc)) %>%
group_by(SID, phase_name, acc, age_years) %>%
summarise(num_looks = mean(num_looks))
mslooks_acc <- filter(d, exclude == 0, !is.na(acc)) %>%
group_by(acc, phase_name, age_years) %>%
multi_boot_standard(col = "num_looks")
msslooks_acc$phase_name <- factor(msslooks_acc$phase_name, levels = c("label","slide", "planning", "response"))
mslooks_acc$phase_name <- factor(mslooks_acc$phase_name, levels = c("label","slide", "planning", "response"))
msslooks_acc$age_years <- factor(msslooks_acc$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
mslooks_acc$age_years <- factor(mslooks_acc$age_years,
levels = c(3, 4),
labels = c("3 years", "4 years"))
msslooks_acc$acc <- as.factor(as.character(msslooks_acc$acc))
msslooks_acc$age_years <- as.factor(as.character(msslooks_acc$age_years))
mslooks_acc$acc <- as.factor(as.character(mslooks_acc$acc))
mslooks_acc$age_years <- as.factor(as.character(mslooks_acc$age_years))
# Chunk 36: acc_results_e2
ggplot(msslooks_acc, aes(x = phase_name, y = num_looks,
col = acc, group = acc)) +
geom_line(data = mslooks_acc, aes(y = mean)) +
geom_pointrange(data = mslooks_acc,
aes(y = mean, ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width =.1)) +
facet_grid(~age_years) +
scale_y_continuous(limits=c(0,2.5), breaks=c(0,1,2)) +
theme(axis.text.x = element_text(angle = 0, hjust = .5, vjust = .5))+
labs(x = "Phase", y = "Number of Looks") +
ggthemes::theme_few() +
langcog::scale_colour_solarized()
# Chunk 37
ggplot(acc_mss_e2, aes(age_years, mean, fill=trial_type)) +
geom_bar(stat="identity", position = "dodge") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
facet_wrap(~ Gaze)  +
ggthemes::theme_few() +
langcog::scale_colour_solarized()  +
labs(x = "Age in Years", y = "Accuracy")
ggplot(acc_mss_e2, aes(age_years, mean, fill=trial_type)) +
geom_bar(stat="identity", position = "dodge") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
facet_wrap(~ Gaze)  +
ggthemes::theme_few() +
langcog::scale_colour_solarized()  +
labs(x = "Age in Years", y = "Accuracy") +
scale_fill_discrete(name="Trial type"))
ggplot(acc_mss_e2, aes(age_years, mean, fill=trial_type)) +
geom_bar(stat="identity", position = "dodge") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
facet_wrap(~ Gaze)  +
ggthemes::theme_few() +
langcog::scale_colour_solarized()  +
labs(x = "Age in Years", y = "Accuracy") +
scale_fill_discrete(name="Trial type")
d$acc <- as.numeric(as.character(d$acc))
acc_mss_e2 <- d%>%
filter(!is.na(acc), exclude == 0)%>%
group_by(trial_type, Gaze, age_years)%>%
multi_boot_standard(col = "acc", na.rm = TRUE)%>%
mutate(Exp = "2")
acc_mss_e2$Gaze <- factor(acc_mss_e2$Gaze,
levels = c("gaze","no_gaze"),
labels = c("Gaze", "No gaze"))
acc_mss_e2$trial_type <- factor(acc_mss_e2$trial_type,
levels = c("familiar","mutual", "novel"),
labels = c("FF", "FN", "NN"))
acc_mss_e2$age_years <- as.factor(acc_mss_e2$age_years)
ggplot(acc_mss_e2, aes(age_years, mean, fill=trial_type)) +
geom_bar(stat="identity", position = "dodge") +
geom_linerange(aes(ymin = ci_lower, ymax = ci_upper),
position = position_dodge(width = .9)) +
facet_wrap(~ Gaze)  +
ggthemes::theme_few() +
langcog::scale_colour_solarized()  +
labs(x = "Age in Years", y = "Accuracy") +
scale_fill_discrete(name="Trial type")
knitr::opts_chunk$set(echo = TRUE)
load("soc_ref_e1.RData")
lmer_data <- d %>%
filter(!exclude) %>%
mutate(num_objs = factor(num_objs),
familiarity = factor(familiarity),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
age_group = factor(age_group),
soc_ref = social_ref)
setwd("~/Desktop/soc_ref_uncert/soc_ref_paper")
load("soc_ref_e1.RData")
lmer_data <- d %>%
filter(!exclude) %>%
mutate(num_objs = factor(num_objs),
familiarity = factor(familiarity),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
age_group = factor(age_group),
soc_ref = social_ref)
load("soc_ref_e1.RData")
View(d)
knitr::opts_chunk$set(echo = TRUE)
library(png)
library(grid)
library(ggplot2)
library(xtable)
library(langcog)
library(dplyr)
library(ggplot2)
library(rjson)
library(stringr)
library(tidyr)
library(lme4)
library(knitr)
library(markdown)
library(lmerTest)
library(ggthemes)
library(psych)
library(broman)
library(kmr)
library(magrittr)
load("soc_ref_e1.RData")
lmer_data <- d %>%
filter(!exclude) %>%
mutate(num_objs = factor(num_objs),
familiarity = factor(familiarity),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
soc_ref = social_ref)
glm_e1 <- summary(glmer(soc_ref ~ num_objs * familiarity * age_c * phase_name +
(1|SID),
data = lmer_data,
family = "binomial"))
load("soc_ref_e2.RData")
lmer_data <- d %>%
filter(!exclude) %>%
mutate(trial_type = factor(trial_type),
age_c = as.numeric(langcog::scale(age_months, scale=FALSE)),
phase_name = factor(phase_name),
gaze = factor(Gaze),
acc = factor(acc),
soc_ref = social_ref)
lmer_data$trial_type <- relevel(lmer_data$trial_type, ref = "familiar")
lmer_data$gaze <- relevel(lmer_data$gaze, ref = "no_gaze")
